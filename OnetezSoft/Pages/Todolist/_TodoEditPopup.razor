<section class="modal is-active">
  <div style="background-color: rgba(32,33,36,.6) !important" class="modal-background"></div>
  <section class="modal-card is-small" style="max-width: 450px">
    <div style="border-radius: 8px;" class="modal-card-body">
      <p class="font_16 has-text-weight-bold mb-5">Chỉnh sửa việc cần làm lặp lại</p>
      <div class="field">
        @if (currentOption == 1)
        {
          <div class="control mb-2">
            <label class="radio">
              <input type="radio" name="type" checked @onclick="() => currentOption= 1">
              <span class="ml-2 font_14">Chỉ công việc này</span>
            </label>
          </div>
          <div class="control mb-2">
            <label class="radio">
              <input type="radio" name="type" @onclick="() => currentOption= 2">
              <span class="ml-2 font_14">Công việc này và các công việc cần làm sau này</span>
            </label>
          </div>
        }
        else
        {
          <div class="control mb-2">
            <label class="radio">
              <input type="radio" name="type" @onclick="() => currentOption= 1">
              <span class="ml-2 font_14">Chỉ công việc này</span>
            </label>
          </div>
          <div class="control mb-2">
            <label class="radio">
              <input type="radio" name="type" checked @onclick="() => currentOption= 2">
              <span class="ml-2 font_14">Công việc này và các công việc cần làm sau này</span>
            </label>
          </div>
        }
        <div class="control is-flex is-justify-content-flex-end mt-5">
          <a class="button is-small mr-3" @onclick="Close">
            Hủy
          </a>
          <a class="button is-link is-small @(isLoading ? "is-loading" : "")" @onclick="Confirm">
            Đồng ý
          </a>
        </div>
      </div>
    </div>
  </section>
</section>

@code {
  [Parameter]
  public EventCallback<int> OnConfirmEdit { get; set; }
  [Parameter]
  public EventCallback OnCloseEdit { get; set; }

  private int currentOption = 1;
  private bool isLoading = false;


  private void Close()
  {
    currentOption = 1;
    OnCloseEdit.InvokeAsync();
  }

  private async Task Confirm()
  {
    isLoading = true;
    await OnConfirmEdit.InvokeAsync(currentOption);
    isLoading = false;
  }
}
