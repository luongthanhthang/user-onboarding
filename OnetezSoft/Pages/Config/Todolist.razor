@inject IJSRuntime JSRuntime
@inject NavigationManager navigation
@inject GlobalService globalService

<PageTitle>@_title</PageTitle>

@if (Layout.User.role != 1 && !Layout.User.role_manage.todolist)
{
  <PopupNoRole />
}
else if (company != null)
{
  <div class="">
    <h1 class="title is-5 has-text-info">
      CẤU HÌNH TODOLIST
    </h1>
    <div class="inner_section">
      <ul class="columns is-multiline">
        <li class="column is-half">
          <div class="field">
            <label class="label">Thời gian check-in</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select @bind="company.todolist.time_checkin">
                  @foreach (var sl in Shared.TimeList(7, 23))
                  {
                    <option value="@sl.name">@sl.name</option>
                  }
                </select>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-half">
          <div class="field">
            <label class="label">Ngày check-in</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select @bind="company.todolist.day_checkin">
                  <option value="-1">Trước ngày làm việc 1 ngày</option>
                  <option value="0">Check-in vào ngày làm việc</option>
                </select>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-half">
          <div class="field">
            <label class="label">Thời gian check-out</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select @bind="company.todolist.time_checkout">
                  @foreach (var sl in Shared.TimeList(7, 23))
                  {
                    <option value="@sl.name">@sl.name</option>
                  }
                </select>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-half">
          <div class="field">
            <label class="label">Thời gian tự động xác nhận</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select @bind="company.todolist.time_confirm">
                  @foreach (var sl in Shared.TimeList())
                  {
                    <option value="@sl.name" selected="@(company.todolist.time_confirm == sl.name)">@sl.name</option>
                  }
                </select>
              </div>
            </div>
          </div>
        </li>
        <li class="column is-half">
          <div class="field">
            <label class="label">Quyền xem Todolist</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select @bind="company.todolist.view_type">
                  <option value="1" selected="@(company.todolist.view_type == 1)">Xem tất cả</option>
                  <option value="2" selected="@(company.todolist.view_type == 2)">Chỉ xem phòng ban bên trong</option>
                </select>
              </div>
            </div>
            @if(company.todolist.view_type == 2)
            {
              <div class="control is-italic has-text-grey mt-2">
                Người dùng chỉ có thể xem todolist của bản thân và những thành việc thuộc cùng phòng ban. Quản lý có thể xem todolist của tất cả thành viên thuộc phòng ban và phòng ban con.
              </div>
            }
            @if (company.todolist.view_type == 1)
            {
              <div class="control is-italic has-text-grey mt-2">
                Người dùng có thể xem được todolist của tất cả mọi người
              </div>
            }
          </div>
        </li>
      </ul>
      <div class="field mt-5">
        <a class="button is-link" @onclick="Update">
          <span class="icon">
            <span class="material-icons-outlined is-size-6">
              done
            </span>
          </span>
          <span>Cập nhật</span>
        </a>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  private string _title = "Cấu hình Todolist";

  private CompanyModel company = null;

  protected override async Task OnInitializedAsync()
  {
    company = await DbMainCompany.Get(Layout.Company.id);
  }

  private async Task<bool> Update()
  {
    bool _success = true;
    try
    {
      await DbMainCompany.Update(company);
      await globalService.Update(company.id);
      await JSRuntime.InvokeVoidAsync("tagline", true, "Đã cập nhật cấu hình Todolist.");
      // Gửi thông báo đến nhân viên
      var shareStorage = await globalService.GetShareStorage(Layout.Company.id);
      foreach (var user in shareStorage.MemberList)
        await DbNotify.Create(Layout.Company.id, 20, company.id, user.id, Layout.User.id);
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "Update()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }
}