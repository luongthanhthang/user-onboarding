@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<PageTitle>@_title</PageTitle>

@if (Layout.User.role != 1 && !Layout.User.role_manage.system)
{
  <PopupNoRole />
}
else
{
  <ul class="columns is-vcentered is-variable is-2 mb-2">
    <li class="column">
      <h1 class="title is-5 has-text-info is-uppercase">
        Lịch nghỉ
      </h1>
    </li>
    <li class="column is-narrow is-full-mobile">
      <a class="button" @onclick="() => EditItem(null)">
        <span class="icon">
          <span class="material-icons-outlined is-size-6">add</span>
        </span>
        <span>Thêm mới</span>
      </a>
    </li>
  </ul>
  <div class="scrolly inner_section" style="flex:1">
    <table class="table is-fullwidth is-vcentered is-responsive mb-2">
      <thead>
        <tr>
          <th class="pt-0" width="18%">Tên ngày nghỉ</th>
          <th class="pt-0" align="center">Ngày nghỉ</th>
          <th class="pt-0" width="12%" align="center">Kết thúc</th>
          <th class="pt-0" width="12%" align="center">Ngày tạo</th>
          <th class="pt-0" width="12%" align="center">Lặp lại</th>
          <th class="pt-0" width="70px" align="center">Xử lý</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var item in dataList)
        {
          <tr>
            <td>
              @item.name
            </td>
            <td align="center">
              <label class="td-label">Ngày nghỉ</label>
              <div class="td-value">
                @if (item.loop == 1)
                {
                  <span>@string.Format("{0:dd/MM/yyyy}", new DateTime(item.start))</span>
                  @if (item.start != item.end)
                  {
                    <span>@string.Format(" - {0:dd/MM/yyyy}", new DateTime(item.end))</span>
                  }
                }
                else
                {
                  if (item.loop_week.mon)
                  {
                    <span>T2, </span>
                  }
                  if (item.loop_week.tue)
                  {
                    <span>T3, </span>
                  }
                  if (item.loop_week.wed)
                  {
                    <span>T4, </span>
                  }
                  if (item.loop_week.thu)
                  {
                    <span>T5, </span>
                  }
                  if (item.loop_week.fri)
                  {
                    <span>T6, </span>
                  }
                  if (item.loop_week.sat)
                  {
                    <span>T7, </span>
                  }
                  if (item.loop_week.sun)
                  {
                    <span>CN</span>
                  }
                }
              </div>
            </td>
            <td align="center">
              <label class="td-label">Kết thúc</label>
              <div class="td-value">
                @string.Format("{0:dd/MM/yyyy}", new DateTime(item.end))
              </div>
            </td>
            <td align="center">
              <label class="td-label">Ngày tạo</label>
              <div class="td-value">
                @string.Format("{0:dd/MM/yyyy}", new DateTime(item.create))
              </div>
            </td>
            <td align="center">
              <label class="td-label">Lặp lại</label>
              <div class="td-value has-text-weight-semibold">
                @if (item.loop == 1)
                {
                  <span>Một lần</span>
                }
                else
                {
                  <span>Hàng tuần</span>
                }
              </div>
            </td>
            <td align="center">
              <label class="td-label">Xử lý</label>
              <div class="td-value">
                <a class="icon has-text-link" title="Chỉnh sửa" @onclick="() => EditItem(item)">
                  <i class="material-icons-outlined is-size-5">
                    edit
                  </i>
                </a>
                <a class="icon has-text-danger" title="Xóa" @onclick="() => DeleteItem(item)">
                  <i class="material-icons-outlined is-size-5">
                    delete
                  </i>
                </a>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
}

@if (current != null)
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-card" style="overflow: visible;">
      <div class="modal-card-head">
        <div class="modal-card-title">
          @(string.IsNullOrEmpty(current.id) ? "Tạo lịch nghỉ mới" : "Chỉnh sửa lịch nghỉ")
        </div>
        <a class="delete" @onclick="() => current = null"></a>
      </div>
      <div class="modal-card-body" style="overflow: visible;">
        <form @onsubmit="Update">
          <div class="field">
            <label class="label">Tên ngày nghỉ</label>
            <div class="control">
              <input @bind="current.name" type="text" class="input" placeholder="Nhập tên ngày nghỉ..." />
            </div>
          </div>
          <div class="field">
            <label class="label">Hình thức lặp lại</label>
            <div class="control">
              @if (current.loop == 1)
              {
                <label class="radio mr-3">
                  <input type="radio" name="loop" @onclick="() => ChangeLoop(1)" checked />
                  <span class="ml-1">Một lần</span>
                </label>
                <label class="radio">
                  <input type="radio" name="loop" @onclick="() => ChangeLoop(2)" />
                  <span class="ml-1">Hàng tuần</span>
                </label>
              }
              else
              {
                <label class="radio mr-3">
                  <input type="radio" name="loop" @onclick="() => ChangeLoop(1)" />
                  <span class="ml-1">Một lần</span>
                </label>
                <label class="radio">
                  <input type="radio" name="loop" @onclick="() => ChangeLoop(2)" checked />
                  <span class="ml-1">Hàng tuần</span>
                </label>
              }
            </div>
          </div>
          <div class="columns is-vcentered">
            <div class="column is-half">
              <label class="label">Bắt đầu nghỉ</label>
              <_InputDate @bind-Start="StartDate" />
            </div>
            <div class="column is-half">
              <label class="label">Kết thúc nghỉ</label>
              <_InputDate @bind-Start="EndDate" />
            </div>
          </div>
          @if (current.loop == 2)
          {
            <div class="field">
              <label class="label">Chọn thứ trong tuần</label>
              <div class="control">
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.mon" />
                  Thứ 2
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.tue" />
                  Thứ 3
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.wed" />
                  Thứ 4
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.thu" />
                  Thứ 5
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.fri" />
                  Thứ 6
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.sat" />
                  Thứ 7
                </label>
                <label class="checkbox mr-2">
                  <input type="checkbox" @bind="current.loop_week.sun" />
                  Chủ nhật
                </label>
              </div>
            </div>
          }
          <div class="field is-grouped mt-5">
            <div class="control is-expanded">
            </div>
            <div class="control">
              <a class="button" @onclick="() => current = null">
                Hủy
              </a>
            </div>
            <div class="control">
              <a class="button is-link" @onclick="Update">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">
                    done
                  </span>
                </span>
                <span>Cập nhật</span>
              </a>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  private string _title = "Cấu hình ngày nghỉ";

  private List<DayOffModel> dataList = new();
  private DayOffModel current = null;
  long StartDate { get; set; }
  long EndDate { get; set; }
  private List<string> userSelected { get; set; } = new();
  private bool isEdit;

  protected override async Task OnInitializedAsync()
  {
    await GetData();
  }

  private async Task<bool> GetData()
  {
    bool _success = true;
    try
    {
      dataList = await DbDayOff.GetAll(Layout.Company.id);
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "GetData()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }

  private async Task<bool> DeleteItem(DayOffModel item)
  {
    bool _success = true;
    try
    {
      if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa {item.name}"))
        return false;

      await DbDayOff.Delete(Layout.Company.id, item.id);
      dataList.Remove(item);
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "DeleteItem()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }

  private void EditItem(DayOffModel item)
  {
    if (item == null)
    {
      current = new()
        {
          start = Convert.ToDateTime(DateTime.Now.ToShortDateString()).Ticks,
          end = Convert.ToDateTime(DateTime.Now.ToShortDateString()).Ticks,
          loop = 1,
          loop_week = new()
        };
    }
    else
    {
      current = item;
      item.time_off.ForEach(i => userSelected.AddRange(i.users));
    }
    StartDate = current.start;
    EndDate = current.end;
  }

  private void ChangeLoop(int loop)
  {
    current.loop = loop;
  }

  private async Task<bool> Update()
  {
    bool _success = true;
    try
    {
      if (Shared.IsEmpty(current.name))
        await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn cần nhập tên ngày nghỉ!");
      else if (StartDate == null || EndDate == null)
        await JSRuntime.InvokeVoidAsync("tagline", false, "Bạn cần chọn ngày bắt đầu và kết thúc!");
      else if (StartDate > EndDate)
        await JSRuntime.InvokeVoidAsync("tagline", false, "Ngày bắt đầu không thể lớn hơn ngày kết thúc !");
      else
      {
        current.start = StartDate;
        current.end = EndDate;
        if (string.IsNullOrEmpty(current.id))
          await DbDayOff.Create(Layout.Company.id, current);
        else
          await DbDayOff.Update(Layout.Company.id, current);

        current = null;
        GetData();
      }
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "Update()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }
}