@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<div class="mb-5">
  <ul class="columns is-vcentered is-variable is-2 mb-2">
    <li class="column">
      <h1 class="title is-5 has-text-info">
        TIẾN ĐỘ OKRs
      </h1>
    </li>
    <li class="column is-narrow">
      <Dropdown DropdownClass="is-right" CloseOnClickMenu=true>
        <Trigger>
          <a class="icon-text">
            <span class="has-text-link text_1_line" style="max-width: 200px;">
              @(okrChart != null ? okrChart.name : "Chọn OKRs")
            </span>
            <span class="icon">
              <i class="material-icons-outlined is-size-6">arrow_drop_down</i>
            </span>
          </a>
        </Trigger>
        <MenuContent>
          @foreach (var item in okrList)
          {
            <a class="dropdown-item" @onclick="() => ChangeOkrChart(item)">
              @item.name
            </a>
          }
        </MenuContent>
      </Dropdown>
    </li>
  </ul>
  <div class="inner_section" style="height: 210px;">
    @if (okrChart != null)
    {
      <canvas id="chartLine" height="210"></canvas>
    }
  </div>
</div>

<div class="mb-5">
  <ul class="columns is-vcentered is-variable is-2 mb-2">
    <li class="column">
      <h1 class="title is-5 has-text-info">
        CHI TIẾT OKRs
      </h1>
    </li>
  </ul>
  <div class="inner_section">
    <table class="table is-fullwidth is-noborder is-responsive">
      <thead>
        <tr class="is-size-7" style="border-bottom: 1px solid #DEDEDE;">
          <th>Mục tiêu</th>
          <th width="200px">Kết Quả Then Chốt</th>
          <th width="180px" align="center">Tiến độ</th>
          <th width="100px" align="center">Thay đổi</th>
          <th width="100px" align="center">Tự tin</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var okr in okrList)
        {
          var progress = DbOkr.GetProgress(okr.key_results);
          var okrColor = Shared.ProgressColor(progress);
          var showKey = okrsShow.Contains(okr.id);
          var confident = DbOkr.Confident(okr.confident);
          <tr>
            <td>
              <div class="is-flex">
                <a class="has-text-weight-semibold" href="/okr/checkin/@okr.id/overview">
                  @okr.name
                </a>
                @if (okr.done)
                {
                  <span class="ml-1 icon" title="OKRs đã hoàn thành">
                    <i class="material-icons is-size-6 has-text-success">check_circle</i>
                  </span>
                }
              </div>
            </td>
            <td>
              <label class="td-label">Kết quả</label>
              <div class="td-value">
                <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.id)">
                  <span>@okr.key_results.Count kết quả</span>
                  <span class="icon">
                    <i class="material-icons-outlined is-size-5">
                      @(showKey ? "arrow_drop_down" : "arrow_right")
                    </i>
                  </span>
                </a>
              </div>
            </td>
            <td>
              <label class="td-label">Tiến độ</label>
              <div class="td-value">
                <div class="progress_has_value">
                  <progress class="progress is-small @okrColor" value="@Convert.ToInt32(progress)" max="100" />
                  <span>@Shared.FormatPercent(progress)%</span>
                </div>
              </div>
            </td>
            <td align="center">
              <label class="td-label">Thay đổi</label>
              <div class="td-value has-text-weight-semibold">
                @Shared.FormatPercent(progress - okr.progress_prev)%
              </div>
            </td>
            <td align="center">
              <label class="td-label">Tự tin</label>
              <div class="td-value has-text-weight-semibold">
                <span class="@confident.color">@confident.name</span>
              </div>
            </td>
          </tr>

          if (showKey)
          {
            foreach (var kr in okr.key_results)
            {
              var confidentKr = DbOkr.Confident(kr.confident);

              <tr>
                <td class="pl-4">
                  @kr.name
                </td>
                <td class="pl-2">
                  @if (!string.IsNullOrEmpty(kr.link))
                  {
                    <a class="icon-text ml-2 has-text-link" href="@kr.link" target="_blank">
                      <span class="icon is-small">
                        <i class="material-icons-outlined">attach_file</i>
                      </span>
                      <span>Kết quả</span>
                    </a>
                  }
                </td>
                <td>
                  <label class="td-label">Đạt được</label>
                  <div class="td-value">
                    <span class="has-text-success" title="@string.Format("{0:0,0}/{1:0,0}", kr.result, kr.target)">
                      @Shared.ConvertNumber(kr.result)/@Shared.ConvertNumber(kr.target)
                    </span>
                    <span class="is-pulled-right">@kr.unit</span>
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Thay đổi</label>
                  <div class="td-value">
                    @Shared.FormatPercent(Shared.Progress(kr.change, kr.target))%
                  </div>
                </td>
                <td align="center">
                  <label class="td-label">Tự tin</label>
                  <div class="td-value has-text-weight-semibold">
                    <span class="@confidentKr.color">@confidentKr.name</span>
                  </div>
                </td>
              </tr>
            }
          }
          <tr>
            <td colspan="5" class="has-text-info has-text-weight-semibold">
              <hr class="my-0" />
            </td>
          </tr>

        }
      </tbody>
    </table>
  </div>
</div>

@if (okrRelated.Count > 0)
{
  var relatedId = string.Empty;
  <div class="">
    <ul class="columns is-vcentered is-variable is-2 mb-2">
      <li class="column is-narrow">
        <h1 class="title is-5 has-text-info">
          OKRs LIÊN QUAN
        </h1>
      </li>
    </ul>
    <div class="inner_section">
      <table class="table is-fullwidth is-noborder is-responsive">
        <thead>
          <tr class="is-size-7" style="border-bottom: 1px solid #DEDEDE;">
            <th>Mục tiêu</th>
            <th width="200px">Kết Quả Then Chốt</th>
            <th width="180px" align="center">Tiến độ</th>
            <th width="100px" align="center">Thay đổi</th>
            <th width="100px" align="center">Tự tin</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var dict in okrRelated)
          {
            var key = dict.Key.Split("|");
            var item = dict.Value;
            var progress = DbOkr.GetProgress(item.key_results);
            var okrColor = Shared.ProgressColor(progress);
            var showKey = okrsShow.Contains(item.id);
            var confident = DbOkr.Confident(item.confident);
            var related = okrList.SingleOrDefault(x => x.id == key[0]);

            <tr>
              <td>
                <a class="has-text-weight-semibold has-text-link" href="/okr/checkin/@item.id/overview">
                  @item.name
                </a>
                <i class="has-text-grey">→ @key[2]</i>
              </td>
              <td>
                <label class="td-label">Kết quả</label>
                <div class="td-value">
                  <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(item.id)">
                    <span>@item.key_results.Count kết quả</span>
                    <span class="icon">
                      <i class="material-icons-outlined is-size-5">
                        @(showKey ? "arrow_drop_down" : "arrow_right")
                      </i>
                    </span>
                  </a>
                </div>
              </td>
              <td>
                <label class="td-label">Tiến độ</label>
                <div class="td-value">
                  <div class="progress_has_value">
                    <progress class="progress is-small @okrColor" value="@Convert.ToInt32(progress)" max="100" />
                    <span>@Shared.FormatPercent(progress)%</span>
                  </div>
                </div>
              </td>
              <td align="center">
                <label class="td-label">Thay đổi</label>
                <div class="td-value has-text-weight-semibold">
                  @Shared.FormatPercent(progress - item.progress_prev)%
                </div>
              </td>
              <td align="center">
                <label class="td-label">Tự tin</label>
                <div class="td-value has-text-weight-semibold">
                  <span class="@confident.color">@confident.name</span>
                </div>
              </td>
            </tr>

            if (showKey)
            {
              foreach (var kr in item.key_results)
              {
                var confidentKr = DbOkr.Confident(kr.confident);
                <tr>
                  <td class="pl-4">
                    @kr.name
                  </td>
                  <td class="pl-2">
                    @if (!string.IsNullOrEmpty(kr.link))
                    {
                      <a class="icon-text ml-2 has-text-link" href="@kr.link" target="_blank">
                        <span class="icon is-small">
                          <i class="material-icons-outlined">attach_file</i>
                        </span>
                        <span>Kết quả</span>
                      </a>
                    }
                  </td>
                  <td>
                    <label class="td-label">Đạt được</label>
                    <div class="td-value">
                      <span class="has-text-success" title="@string.Format("{0:0,0}/{1:0,0}", kr.result, kr.target)">
                        @Shared.ConvertNumber(kr.result)/@Shared.ConvertNumber(kr.target)
                      </span>
                      <span class="is-pulled-right">@kr.unit</span>
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">Thay đổi</label>
                    <div class="td-value">
                      @Shared.FormatPercent(Shared.Progress(kr.change, kr.target))%
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">Tự tin</label>
                    <div class="td-value has-text-weight-semibold">
                      <span class="@confidentKr.color">@confidentKr.name</span>
                    </div>
                  </td>
                </tr>
              }
            }
            if (related != null && relatedId != related.id)
            {
              relatedId = related.id;
              <tr>
                <td colspan="5" class="has-text-info has-text-weight-semibold">
                  <hr class="mt-0 mb-3" />
                  O: @related.name
                </td>
              </tr>
            }
          }
        </tbody>
      </table>
    </div>
  </div>
}

<TaskPopup Okr="taskOkr" Kr="taskKr" />

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }

  [Parameter]
  public UserModel User { get; set; }

  private List<OkrModel> okrList = new();
  private Dictionary<string, OkrModel> okrRelated = new();
  private List<string> okrsShow = new();
  private OkrModel okrChart = null;
  private OkrModel taskOkr = null;
  private OkrModel.KeyResult taskKr = null;

  protected override async Task OnParametersSetAsync()
  {
    await OnLoad();
  }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    taskOkr = null;
    taskKr = null;
    if (okrList.Count > 0)
    {
      await ChangeOkrChart(okrList[0]);
    }
  }

  private async Task OnLoad()
  {
    try
    {
      okrsShow.Clear();
      okrChart = null;

      okrList = await DbOkr.GetList(Layout.Company.id, Layout.CycleId, User.id);
      if (okrList.Count > 0)
      {
        await ChangeOkrChart(okrList[0]);
      }

      okrRelated = new();
      foreach (var item in okrList)
      {
        if (!string.IsNullOrEmpty(item.parent))
        {
          var okr = await DbOkr.Get(Layout.Company.id, item.parent);
          if (okr != null)
            okrRelated.Add($"{item.id}|{DateTime.Now.Ticks}|OKR cấp trên", okr);
        }
        foreach (var kr in item.key_results)
        {
          foreach (var cross in kr.cross_links)
          {
            var okr = await DbOkr.Get(Layout.Company.id, cross.okr);
            if (okr != null)
              okrRelated.Add($"{item.id}|{DateTime.Now.Ticks}|OKR liên kết", okr);
          }
        }
      }
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "OnLoad()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
    }
  }

  private async Task ChangeOkrChart(OkrModel item)
  {
    try
    {
      okrChart = item;
      if (okrChart == null)
        return;

      var dataList = await DbOkrCheckin.GetList(Layout.Company.id, Layout.CycleId, okrChart.id, true);

      dataList = dataList.OrderBy(x => x.date_create).ToList();

      int chartCount = dataList.Count + 1;

      var chartLabel = new string[chartCount];
      var chartDatas = new int[chartCount];

      chartLabel[0] = string.Format("{0:dd/MM}", new DateTime(okrChart.date_create));
      chartDatas[0] = 0;

      for (int i = 0; i < dataList.Count; i++)
      {
        var checkin = dataList[i];
        chartLabel[i + 1] = string.Format("{0:dd/MM}", new DateTime(checkin.date_create));
        chartDatas[i + 1] = (int)DbOkrCheckin.GetProgress(checkin.key_results, okrChart.key_results);
      }

      await JSRuntime.InvokeAsync<string>("runChartLine", "Tiến độ (%)", chartLabel, chartDatas);
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "ChangeOkrChart()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
    }
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }

  private void ShowTask(OkrModel okr, OkrModel.KeyResult kr)
  {
    taskOkr = okr;
    taskKr = kr;
  }
}