@inject IJSRuntime JSRuntime
@inject NavigationManager navigation
@inject GlobalService globalService

<div class="my-5">
  <ul class="columns is-vcentered is-variable is-2 mb-1">
    <li class="column">
      <h1 class="title is-5 has-text-info">
        DANH SÁCH KẾ HOẠCH
      </h1>
    </li>
  </ul>

  @if (Layout.IsMobile)
  {
    foreach (var item in planList)
    {
      var show = toggleStatus.Contains(item.Key);
      var status = WorkService.StatusPlan(item.Key);
      <div class="icon-text">
        <span class="icon is-small mr-2">
          <i class="material-icons-outlined is-size-6">@status.icon</i>
        </span>
        <a class="has-text-dark has-text-weight-semibold font_14 is-uppercase" @onclick="() => ToggleStatus(status.id)">
          Kế hoạch @status.name (@item.Value.Count)
        </a>
        <a class="icon is-small has-text-dark" @onclick="() => ToggleStatus(status.id)">
          <i class="material-icons-outlined is-size-6">@(show ? "arrow_drop_down" : "arrow_right")</i>
        </a>
      </div>
      @if (show)
      {
        <div class="inner_section">
          @foreach (var plan in item.Value)
          {
            var report = allWorkReports.FirstOrDefault(x => x.id == plan.id);
            if(report == null)
              report = new WorkPlanModel.Report() { id = plan.id };

            var manages = plan.members.Where(x => x.role == 1).ToList();
            var members = plan.members.Where(x => x.role == 2).ToList();

            <ul class="columns is-multiline is-variable is-vcentered is-1 is-mobile my-2 is-size-7">
              <li class="column is-full">
                <div class="icon-text">
                  <span class="icon is-small">
                    <i class="material-icons-outlined is-size-6">
                      @(plan.is_private ? "lock" : "public")
                    </i>
                  </span>
                  <a class="has-text-link has-text-weight-medium font_14" href="/work/@plan.id/detail" target="_blank">
                    @plan.name
                  </a>
                </div>
              </li>
              <li class="column is-one-third pl-4">
                <span class="has-text-grey">Công việc:</span>
              </li>
              <li class="column is-two-thirds">
                @report.total
              </li>
              <li class="column is-one-third pl-4">
                <span class="has-text-grey">Kết thúc</span>
              </li>
              <li class="column is-two-thirds">
                @if (plan.date_end > 0)
                {
                  <span>@string.Format("{0:dd/MM/yyyy}", new DateTime(plan.date_end))</span>
                }
              </li>
              <li class="column is-one-third pl-4">
                <span class="has-text-grey">Quản lý:</span>
              </li>
              <li class="column is-two-thirds">
                <OnetezSoft.Pages.Work._MemberList members="manages" sources="shareStorage.MemberList" />
              </li>
              <li class="column is-one-third pl-4">
                <span class="has-text-grey">Thành viên:</span>
              </li>
              <li class="column is-two-thirds">
                <OnetezSoft.Pages.Work._MemberList members="members" sources="shareStorage.MemberList" />
              </li>
            </ul>
          }
        </div>
      }
    }
  }
  else
  {
    <div class="inner_section">
      <table class="table is-fullwidth is-vcentered is-noborder is-responsive">
        <thead>
          <tr class="is-size-7" style="border-bottom: 1px solid #DEDEDE;">
            <th>Kế hoạch</th>
            <th width="110px">Chế độ</th>
            <th width="100px">Công việc</th>
            <th width="120px">Quản lý</th>
            <th width="120px">Thành viên</th>
            <th width="90px">Kết thúc</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var item in planList)
          {
            var show = toggleStatus.Contains(item.Key);
            var status = WorkService.StatusPlan(item.Key);
            <tr>
              <td colspan="6">
                <div class="icon-text">
                  <a class="icon is-small has-text-dark mr-2" @onclick="() => ToggleStatus(status.id)">
                    <i class="material-icons-outlined is-size-5">@(show ? "arrow_drop_down" : "arrow_right")</i>
                  </a>
                  <span class="has-text-weight-semibold font_14 is-uppercase">
                    Kế hoạch @status.name (@item.Value.Count)
                  </span>
                </div>
              </td>
            </tr>

            @if (show)
            {
              foreach (var plan in item.Value)
              {
                var report = allWorkReports.FirstOrDefault(x => x.id == plan.id);
                if (report == null)
                  report = new WorkPlanModel.Report() { id = plan.id };

                var manages = plan.members.Where(x => x.role == 1).ToList();
                var members = plan.members.Where(x => x.role == 2).ToList();
                <tr>
                  <td class="pl-5">
                    <a class="has-text-link has-text-weight-medium" href="/work/@plan.id/detail" target="_blank">
                      @plan.name
                    </a>
                  </td>
                  <td>
                    <span class="icon-text">
                      <span class="icon is-small">
                        <i class="material-icons-outlined is-size-6">
                          @(plan.is_private ? "lock" : "public")
                        </i>
                      </span>
                      <span>@(plan.is_private ? "Riêng tư" : "Công khai")</span>
                    </span>
                  </td>
                  <td>
                    <span class="has-text-weight-semibold">@report.total</span>
                  </td>
                  <td>
                    <OnetezSoft.Pages.Work._MemberList members="manages" sources="shareStorage.MemberList" />
                  </td>
                  <td>
                    <OnetezSoft.Pages.Work._MemberList members="members" sources="shareStorage.MemberList" />
                  </td>
                  <td>
                    @if (plan.date_end > 0)
                    {
                      <span>@string.Format("{0:dd/MM/yyyy}", new DateTime(plan.date_end))</span>
                    }
                  </td>
                </tr>
              }
            }
          }
        </tbody>
      </table>
    </div>
  }
</div>

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public DepartmentModel department { get; set; }
  private Dictionary<int, List<WorkPlanModel>> planList = new();
  private List<int> toggleStatus = new() { 1 };

  private List<WorkPlanModel.Report> allWorkReports = new();

  private SharedStorage shareStorage = new();

  protected override async Task OnParametersSetAsync()
  {
    allWorkReports = await DbWorkReport.GetAll(Layout.Company.id);
    shareStorage = await globalService.GetShareStorage(Layout.Company.id);
    try
    {
      // Lấy danh sách dự án đang tham gia
      var data = await DbWorkPlan.GetAll(Layout.Company.id);
      var views = new List<WorkPlanModel>();
      foreach (var item in data)
      {
        var check = item.members.Where(x => department.members_id.Contains(x.id)).Count();
        if (check > 0)
          views.Add(item);
      }

      planList.Clear();
      foreach (var status in WorkService.StatusPlan())
      {
        var list = views.Where(x => x.status == status.id).ToList();
        planList.Add(status.id, list);
      }
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "OnParametersSetAsync()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
    }
  }

  private void ToggleStatus(int id)
  {
    if (toggleStatus.Contains(id))
      toggleStatus.Remove(id);
    else
      toggleStatus.Add(id);
  }
}