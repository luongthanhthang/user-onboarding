@inject IJSRuntime JSRuntime

@if (kpisRoot != null)
{
  <Dropdown CloseOnClickMenu=false MenuClass="px-2" DropdownClass="is-right" MenuStyle="width: 350px;" @bind-Toggle="toggle">
    <Trigger>
      <div class="field is-grouped is-fullwidth py-1 px-2 is-clickable has-text-link">
        <div class="control m-0">
          Tiêu đề KPIs
        </div>

        <div class="control is-expanded has-text-right">
          <span class="icon">
            <i class="material-icons-outlined is-size-5">arrow_drop_down</i>
          </span>
        </div>
      </div>
    </Trigger>

    <MenuContent>
      <div class="field">
        <label class="label">KPIs áp dụng</label>
        <ul class="columns is-vcentered is-multiline is-variable is-2 mb-3">
          <li class="column is-narrow">
            <div class="select is-fullwidth">
              <select @onchange="ChangeType">
                @foreach (var item in typeList)
                {
                  <option value="@item.Key" selected="@(selectType == item.Key)">@item.Value</option>
                }
              </select>
            </div>
          </li>

          <li class="column">
            <form class="control is-expanded scrolly has-icons-right" @onsubmit="Search" @onclick:stopPropagation>
              <input @bind="filterKeyword" class="input is-rounded" type="text" placeholder="Nhập tên KPIs">
              <span class="icon is-right">
                <i class="material-icons-outlined is-size-5">search</i>
              </span>
            </form>
          </li>
        </ul>
        <div class="control is-expanded scrolly" style="max-height: 250px;">
          @if (dataFilter.Any())
          {
            <div class="mb-3">
              <a class="icon-text" @onclick="() => AddKpis()">
                <span class="icon">
                  @if (resutList.Any() && dataFilter.Select(i => i.id).All(i => resutList.Contains(i)))
                  {
                    <span class="material-icons has-text-link is-clickable">
                      check_box
                    </span>
                  }
                  else
                  {
                    <span class="material-icons is-clickable">
                      check_box_outline_blank
                    </span>
                  }
                </span>
                <span>
                  Chọn tất cả
                </span>
              </a>
            </div>
            @foreach (var kpis in dataFilter)
            {
              var icon = "";
              var title = "";
              if (kpis.type == 2 && kpis.parent == kpisRoot.id)
              {
                icon = "corporate_fare";
                title = "KPIs cao nhất";
              }
              else if (kpis.type == 2)
              {
                icon = "account_tree";
                title = "KPIs tự động";
              }
              else if (kpis.type == 1)
              {
                icon = "account_circle";
                title = "KPIs nhập liệu";
              }

              <div class="mb-3">
                <span class="icon-text" @onclick="() => AddKpis(kpis.id)">
                  <span class="icon">
                    @if (resutList.Contains(kpis.id))
                    {
                      <span class="material-icons has-text-link is-clickable">
                        check_box
                      </span>
                    }
                    else
                    {
                      <span class="material-icons is-clickable">
                        check_box_outline_blank
                      </span>
                    }
                  </span>

                  <span class="icon has-text-grey" title="@title">
                    <span class="material-icons@(kpis.type == 2 ? "-outlined" : "") is-size-6">
                      @icon
                    </span>
                  </span>

                  <span class="font_12">
                    @kpis.name
                  </span>
                </span>
              </div>
            }
          }
          else
          {
            <span>Không tìm thấy dữ liệu phù hợp!</span>
          }
        </div>
      </div>


      <hr class="dropdown-divider">
      <div class="buttons is-right">
        <a class="button is-small" @onclick="Cancel">
          <span class="icon">
            <i class="material-icons-round is-size-6">close</i>
          </span>
          <span class="is-size-7">Hủy</span>
        </a>
        <a class="button is-link is-small" @onclick="Update">
          <span class="icon">
            <i class="material-icons-round is-size-6">done</i>
          </span>
          <span class="is-size-7">Hoàn tất</span>
        </a>
      </div>
    </MenuContent>
  </Dropdown>
}

@code {
  [Parameter]
  public List<KpisModel> database { get; set; } = new();
  [Parameter]
  public List<string> kpisIdSelect { get; set; } = new();
  [Parameter]
  public KpisModel kpisRoot { get; set; }
  [Parameter]
  public EventCallback<List<string>> OnUpdate { get; set; }

  private bool toggle;
  private List<KpisModel> dataFilter = new();
  private List<string> resutList = new();
  private int selectType = 1;
  private string filterKeyword = "";
  private Dictionary<int, string> typeList = new()
  {
    { 1, "Tất cả các loại"},
    { 2, "KPIs cao nhất"},
    { 3, "KPIs tự động"},
    { 4, "KPIs nhập liệu"}
  };

  protected override void OnInitialized()
  {
    resutList = kpisIdSelect.Where(i => true).ToList();
    Filter();
  }

  /// <summary>Tìm kiếm</summary>
  private void Search()
  {
    Filter();
  }

  /// <summary>Đổi phòng ban</summary>
  private void ChangeType(ChangeEventArgs e)
  {
    selectType = Convert.ToInt32(e.Value);
    Filter();
  }

  private void AddKpis(string id = null)
  {
    if (id == null)
      if (dataFilter.Select(x => x.id).All(i => resutList.Contains(i)))
        resutList.RemoveAll(i => dataFilter.Select(x => x.id).Contains(i));
      else
      {
        resutList.AddRange(dataFilter.Select(x => x.id));
        resutList.Distinct();
      }
    else
       if (resutList.Contains(id))
      resutList.Remove(id);
    else
      resutList.Add(id);
  }

  /// <summary>Lọc kết quả tìm kiếm và phòng ban</summary>
  private void Filter()
  {
    dataFilter = database.Where(x =>
    {
      return string.IsNullOrEmpty(filterKeyword) ? true : Shared.SearchKeyword(filterKeyword, x.name);
    }).ToList();

    if (selectType == 2)
      dataFilter = dataFilter.Where(i => i.type == 2 && i.parent == kpisRoot.id).ToList();
    else if (selectType == 3)
      dataFilter = dataFilter.Where(i => i.type == 2 && i.parent != kpisRoot.id).ToList();
    else if (selectType == 4)
      dataFilter = dataFilter.Where(i => i.type == 1).ToList();

    StateHasChanged();
  }

  private void Cancel()
  {
    ResetFilter();
    resutList = dataFilter.Select(i => i.id).ToList();
    Filter();
  }

  private async Task Update()
  {
    dataFilter = database.Where(i => resutList.Contains(i.id)).ToList();
    ResetFilter();
    Filter();
    await OnUpdate.InvokeAsync(resutList);
  }

  private void ResetFilter()
  {
    selectType = 1;
    filterKeyword = "";
    toggle = false;
  }
}
