@inject GlobalService globalService

@if(model != null)
{
  <div class="tree_okr_slidebar">
    <div class="p-4">
      <ul class="columns is-vcentered is-variable is-0">
        <li class="column is-2">
          <a class="icon-text is-size-7" @onclick="Close">
            <span class="icon is-small has-text-link">
              <i class="material-icons-outlined is-size-6">arrow_back</i>
            </span>
            <span class="has-text-link">Đóng</span>
          </a>
        </li>
        <li class="column has-text-centered">
          <span class="has-text-weight-bold is-uppercase">Chi tiết phòng ban</span>
        </li>
        <li class="column is-2"></li>
      </ul>
    </div>
    
    <div class="sliderbar_body px-4">
      <div class="columns is-mobile is-vcentered">
        <div class="column has-text-weight-bold">@model.name</div>
        <div class="column is-narrow">@model.members_id.Count nhân viên</div>
      </div>

      @foreach (var memberId in model.members_id)
      {
        var member = shareStorage.MemberList.FirstOrDefault(x => x.id == memberId);
        if(member != null)
        {
          var okrList = allOkrs.Where(x => x.user_create == member.id).ToList();
          var progress = GetProgress(okrList);
          var color = Shared.ProgressColor(progress);

          <div class="columns is-vcentered is-variable is-1">
            <div class="column is-8">
              <div class="user_item has-text-info">
                <img class="image is-36x36 mr-2" src="@member.avatar" alt="IMG">
                <span class="text_1_line">@member.name</span>
              </div>
            </div>
            <div class="column is-4">
              <div class="progress_has_value">
                <progress class="progress is-small @color" value="@Convert.ToInt32(progress)" max="100"></progress>
                <span class="@color">@Shared.FormatPercent(progress)%</span>
              </div>
            </div>
          </div>

          <ul class="py-3">
            @if(okrList.Count > 0)
            {
              <li class="has-text-grey mb-3 is-size-7">
                Tiến độ OKRs
              </li>
              @foreach (var okr in okrList)
              {
                var okrProgress = DbOkr.GetProgress(okr.key_results);
                var okrColor = Shared.ProgressColor(okrProgress);
                var showKey = okrsShow.Contains(okr.id);

                <li class="mb-2">
                  <strong>O:</strong>
                  <span>@okr.name</span>
                </li>
                <li class="mb-2">
                  <a class="columns is-mobile is-vcentered is-variable is-1" @onclick="() => ShowKeys(okr.id)">
                    <div class="column is-5">
                      <a class="icon-text">
                        <span class="icon">
                          <i class="material-icons-outlined is-size-5">
                            @(showKey ? "arrow_drop_down" : "arrow_right")
                          </i>
                        </span>
                        <span>@string.Format("{0}KRs", okr.key_results.Count)</span>
                      </a>
                    </div>
                    <div class="column is-7">
                      <div class="progress_has_value">
                        <progress class="progress is-small @okrColor" value="@Convert.ToInt32(okrProgress)" max="100" />
                        <span class="@okrColor">@Shared.FormatPercent(okrProgress)%</span>
                      </div>
                    </div>
                  </a>
                </li>
                @if(showKey)
                {
                  <li class="pl-5 mb-4">
                    @foreach (var kr in okr.key_results)
                    {
                      <div class="columns is-mobile is-vcentered is-variable is-1 is-size-7 mb-2">
                        <div class="column is-8">
                          <span>@kr.name</span>
                        </div>
                        <div class="column is-4">
                          <span title="@string.Format("{0:0,0.000} / {1:0,0.000}", kr.result, kr.target)">
                            @Shared.ConvertNumber(kr.result)/@Shared.ConvertNumber(kr.target)
                          </span>
                          <span class="is-pulled-right">@kr.unit</span>
                        </div>
                      </div>
                    }
                  </li>
                }
              }
            }
            else
            {
              <li class="has-text-centered has-text-grey is-size-7">
                Chưa có OKRs
              </li>
            }
          </ul>
          <hr class="mt-3 mb-5" />
        }
      }
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public DepartmentModel model { get; set; }
  [Parameter]
  public EventCallback OnClose { get; set; }

  private List<string> okrsShow = new();

  private SharedStorage shareStorage = new();

  private List<OkrModel> allOkrs = new();

  protected override async Task OnInitializedAsync()
  {
    allOkrs = await DbOkr.GetAll(Layout.Company.id, Layout.CycleId);
    shareStorage = await globalService.GetShareStorage(Layout.Company.id);
  }

  private void Close()
  {
    OnClose.InvokeAsync();
  }

  private MemberModel GetManager()
  {
    var manager = model.members_list.Where(x => x.role < 3).OrderBy(x => x.role).FirstOrDefault();
    if(manager != null)
      return shareStorage.MemberList.FirstOrDefault(x => x.id == manager.id);
    return null;
  }

  private double GetProgress(List<OkrModel> list)
  {
    double result = 0;
    foreach (var item in list)
      result += DbOkr.GetProgress(item.key_results);
    return list.Count > 0 ? result / list.Count : 0;
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }
}