@page "/password"
@layout LayoutLogin
@inject IJSRuntime JSRuntime
@inject GlobalService globalService
@inject ProtectedLocalStorage storage
@inject NavigationManager navigation

<div class="login_form">
  <div class="logo">
    <img src="/images/logo.png" alt="logo" />
  </div>
  <section>
    @if(user == null)
    {
      <div class="title is-size-5">
        Quên mật khẩu
      </div>
      <div class="font_14 pb-4">
        Nhập email đăng nhập của bạn
      </div>
      <div class="control has-icons-left">
        <input @bind="email" type="email" class="input" placeholder="Nhập email..." />
        <span class="icon is-left has-text-black">
          <i class="material-icons-round is-size-6">account_circle</i>
        </span>
      </div>
      <a class="button is-link is-fullwidth" @onclick="Next">
        <span class="is-size-7">Tiếp tục</span>
        <span class="icon">
          <i class="material-icons-round is-size-6">chevron_right</i>
        </span>
      </a>
    }
    else if(!string.IsNullOrEmpty(user.verify))
    {
      <div class="title is-size-5">
        Quên mật khẩu
      </div>
      <div class="font_14 pb-4">
        Nhập email đăng nhập của bạn
      </div>
      <div class="control has-icons-left has-icons-right">
        <input value="@user.email" type="email" class="input" placeholder="Nhập email..." />
        <span class="icon is-left has-text-black">
          <i class="material-icons-round is-size-6">account_circle</i>
        </span>
        <span class="icon is-right has-text-black">
          <i class="material-icons-round is-size-6">done</i>
        </span>
      </div>
      <div class="title is-size-5">
        Xác thực tài khoản
      </div>
      <div class="font_14 pb-4">
        Mã xác thực đã được gửi vào email của bạn. Vui lòng kiểm tra và nhập mã xác thực để hoàn thành thao tác. Mã xác thực tồn tại trong 5 phút.
      </div>
      <div class="has-text-weight-medium is-italic">
        <span>Email không nhận được mã xác thực?</span>
        <a class="has-text-warning has-text-weight-semibold" href="https://fastdo.vn/lien-he/">Yêu cầu hỗ trợ</a>
      </div>
      <div class="py-6">
        <input @bind="verify" class="input_code has-text-danger" type="text" maxlength="6" placeholder="______">
      </div>
      <div class="has-text-weight-medium is-italic mb-3">
        <span>Không nhận được mã xác thực?</span>
        <a class="has-text-link has-text-weight-semibold" @onclick="Verify">Thử lại</a>
      </div>
      <a class="button is-link is-fullwidth" @onclick="Active">
        <span class="is-size-7">Xác thực</span>
        <span class="icon">
          <i class="material-icons-round is-size-6">done</i>
        </span>
      </a>
    }
    else
    {
      <div class="title is-size-5">
        Tạo mật khẩu mới
      </div>
      <div class="control has-icons-left has-icons-right">
        <input value="@user.email" type="email" class="input" placeholder="Nhập email..." />
        <span class="icon is-left has-text-black">
          <i class="material-icons-round is-size-6">account_circle</i>
        </span>
        <span class="icon is-right has-text-black">
          <i class="material-icons-round is-size-6">done</i>
        </span>
      </div>
      <div class="control has-icons-left has-icons-right">
        <input @bind="password1" type="@(showpass ? "text" : "password")" class="input" placeholder="Nhập mật khẩu mới..." />
        <span class="icon is-left has-text-black">
          <i class="material-icons-round is-size-6">lock</i>
        </span>
        @if (password1.Length > 0)
        {
          <a class="icon is-right has-text-black" @onclick="() => showpass = !showpass">
            <i class="material-icons-round is-size-6">visibility</i>
          </a>
        }
      </div>
      <div class="control has-icons-left has-icons-right">
        <input @bind="password2" type="@(showpass ? "text" : "password")" class="input" placeholder="Nhập lại mật khẩu..." />
        <span class="icon is-left has-text-black">
          <i class="material-icons-round is-size-6">lock</i>
        </span>
        @if (password2.Length > 0)
        {
          <a class="icon is-right has-text-black" @onclick="() => showpass = !showpass">
            <i class="material-icons-round is-size-6">visibility</i>
          </a>
        }
      </div>
      <a class="button is-link is-fullwidth" @onclick="Update">
        <span class="is-size-7">Hoàn tất</span>
        <span class="icon">
          <i class="material-icons-round is-size-6">done</i>
        </span>
      </a>
    }
    <div class="has-text-danger has-text-centered is-italic mt-3" style="min-height: 1rem;">@message</div>
  </section>
  <div class="is-size-7">
    <span class="has-text-grey">
      Đăng ký người dùng mới?
    </span>
    <a class="has-text-link has-text-weight-bold" href="https://fastdo.vn/lien-he/">
      Liên hệ ngay
    </a>
  </div>
  <div class="copyright">
    Copyright © 2022 FASTDO
  </div>
</div>

@code {
  private bool showpass = false;
  private string message = string.Empty;
  private string email = string.Empty;
  private string verify = string.Empty;
  private string password1 = string.Empty;
  private string password2 = string.Empty;
  private int count = 0;
  private UserModel user = null;

  private async Task Next()
  {
    if (string.IsNullOrEmpty(email))
      message = "Bạn chưa nhập địa chỉ email";
    else if (!email.Contains("@"))
      message = "Địa chỉ email không đúng định dạng";
    else
    {
      user = await DbMainUser.GetbyEmail(email, globalService);
      if(user == null)
        message = "Không tìm thấy tài khoản của email này";
      else if(!user.active)
        message = "Tài khoản của email này đã bị khóa!";
      else
      {
        // Gửi email xác thực
        await Verify();
      }
    }
  }

  private async Task<bool> Verify()
  {
    count = 0;

    await JSRuntime.InvokeVoidAsync("tagline", true, "Đang gửi mã xác thực qua email...");

    user.verify = Shared.RandomInt(100000, 999999).ToString();
    await DbMainUser.Update(user, globalService,false);

    bool send = EmailService.ForgotPassword(user.email, user.verify, out message);
    await JSRuntime.InvokeVoidAsync("tagline", send, message);
    message = string.Empty;
    return send;
  }

  private async Task Active()
  {
    if (string.IsNullOrEmpty(verify))
      message = "Bạn chưa nhập mã xác thực.";
    else if (verify != user.verify)
    {
      if(count == 5)
      {
        user = null;
        email = string.Empty;
        verify = string.Empty;
        message = "Bạn đã nhập sai 5 lần liên tiếp, vui lòng nhập lại email để lấy mã xác thực.";
      }
      else
      {
        count++;
        message = $"Mã xác thực không chính xác (lần {count})";
      }
    }
    else
    {
      message = string.Empty;
      user.verify = string.Empty;
      await DbMainUser.Update(user, globalService,false);
      return;
    }
  }

  private async Task Update()
  {
    if (string.IsNullOrEmpty(password1))
      message = "Bạn chưa nhập mật khẩu mới.";
    else if (password1 != password2)
      message = "Mật khẩu không trùng khớp.";
    else
    {
      user.password = Handled.Shared.CreateMD5(password1);
      await DbMainUser.Update(user, globalService, false);
      navigation.NavigateTo("/", true);
    }
  }
}