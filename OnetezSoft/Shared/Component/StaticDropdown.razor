
<div class="dropdown is-right @(toggle ? "is-active" : "")">
  <div class="dropdown-trigger">
    <a class="icon-text" @onclick="() => toggle = !toggle">
      <span class="has-text-link">
        @GetSelected()
      </span>
      <span class="icon">
        <i class="material-icons-outlined is-size-5">arrow_drop_down</i>
      </span>
    </a>
  </div>
  @if(toggle)
  {
    <div class="dropdown-menu">
      <div class="dropdown-content">
        <a class="dropdown-item" @onclick="() => Selected(0)">
          @title
        </a>
        @foreach (var item in data)
        {
          <a class="dropdown-item @(value == item.id ? "has-text-link" : "")" @onclick="() => Selected(item.id)">
            @item.name
          </a>
        }
      </div>
    </div>
  }
</div>

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public int value { get; set; }
  [Parameter]
  public string title { get; set; }
  [Parameter]
  public List<StaticModel> data { get; set; }
  [Parameter]
  public EventCallback<int> OnUpdate { get; set; }
  private bool toggle = false;

  private string GetSelected()
  {
    var item = data.FirstOrDefault(x => x.id == value);
    if(item != null)
      return item.name;
    else
      return title;
  }

  private async Task Selected(int item)
  {
    value = item;
    toggle = false;
    await OnUpdate.InvokeAsync(value);
  }
}