@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

@if (Okr != null)
{
  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-card is-large">
      <div class="modal-card-head">
        <div class="modal-card-title">
          Kế hoạch hành động
        </div>
        <a class="delete" @onclick="() => Okr = null"></a>
      </div>
      <form class="modal-card-body">
        <table class="table is-fullwidth is-striped is-noborder is-responsive">
          <thead>
            <tr class="tr-hide">
              <th width="35%">Hành động</th>
              <th>Kết quả</th>
              <th width="110px">Bắt đầu</th>
              <th width="110px">Kết thúc</th>
              <th width="100px">Trạng thái</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="5">
                <div class="has-text-weight-semibold is-size-6">
                  <span class="has-text-link">O</span>
                  <span class="has-text-info">• @Okr.name</span>
                </div>
              </td>
            </tr>
            <tr>
              <td colspan="5" class="pl-5">
                <div class="has-text-weight-semibold">
                  <span class="has-text-link">K</span>
                  <span class="has-text-info">• @Kr.name</span>
                </div>
              </td>
            </tr>
            @foreach (var task in dataList)
            {
              var status = DbOkrTask.Status(task.status);

              <tr>
                <td class="pl-5">
                  <label class="td-label">Công việc</label>
                  <div class="td-value has-text-weight-medium">
                    @if (Layout.User.id == task.user)
                    {
                      <a class="has-text-info pl-3 pl-0-mobile text_1_line" @onclick="() => EditItem(task)" title="@task.name">
                        • @task.name
                      </a>
                    }
                    else
                    {
                      <span class="has-text-info pl-3 pl-0-mobile text_1_line" onclick="toggleText(this)" title="@task.name">
                        • @task.name
                      </span>
                    }
                  </div>
                </td>
                <td>
                  <label class="td-label">Kết quả</label>
                  <div class="td-value">
                    <div class="text_1_line" onclick="toggleText(this)">
                      @if (!string.IsNullOrEmpty(task.link))
                      {
                        <a class="icon-text mr-4 has-text-link" href="@task.link" target="_blank">
                          <span class="icon is-small">
                            <i class="material-icons-outlined">attach_file</i>
                          </span>
                          <span>Kế hoạch</span>
                        </a>
                      }
                      @((MarkupString)Shared.GetLinks(task.result))
                    </div>
                  </div>
                </td>
                <td>
                  <label class="td-label">Bắt đầu</label>
                  <div class="td-value">
                    @string.Format("{0:dd/MM/yyyy}", new DateTime(task.start))
                  </div>
                </td>
                <td width="110px">
                  <label class="td-label">Kết thúc</label>
                  <div class="td-value">
                    @string.Format("{0:dd/MM/yyyy}", new DateTime(task.end))
                  </div>
                </td>
                <td width="110px" align="center">
                  <label class="td-label">Trạng thái</label>
                  <div class="td-value has-text-weight-semibold">
                    <span class="@status.color">@status.name</span>
                  </div>
                </td>
              </tr>
            }
            @if (dataList.Count == 0)
            {
              <tr>
                <td class="pl-6" colspan="5">
                  Chưa có kế hoạch cho kết quả chính này !
                </td>
              </tr>
            }
          </tbody>
        </table>
      </form>
    </div>
  </div>
}

@if (current != null)
{
  var status = DbOkrTask.Status(current.status);

  <div class="modal is-active">
    <div class="modal-background"></div>
    <div class="modal-card">
      <div class="modal-card-head">
        <div class="modal-card-title">
          Thông tin hành động
        </div>
        <a class="delete" @onclick="() => current = null"></a>
      </div>
      <form @onsubmit="Update" class="modal-card-body">
        <ul class="columns is-multiline">
          <li class="column is-full">
            <div class="field">
              <label class="label">Tên hành động *</label>
              <div class="control">
                <input @bind="current.name" type="text" class="input" placeholder="Nhập tiêu đề hành động" />
              </div>
            </div>
          </li>
          <li class="column is-one-third">
            <div class="field">
              <label class="label">Ngày bắt đầu *</label>
              <div class="control has-icons-left">
                <div class="input">
                  <DateRangePicker SingleDatePicker="true" @bind-StartDate="StartDate" />
                </div>
                <span class="icon is-left">
                  <i class="material-icons-outlined">
                    calendar_today
                  </i>
                </span>
              </div>
            </div>
          </li>
          <li class="column is-one-third">
            <div class="field">
              <label class="label">Ngày kết thúc *</label>
              <div class="control has-icons-left">
                <div class="input">
                  <DateRangePicker SingleDatePicker="true" @bind-StartDate="EndDate" />
                </div>
                <span class="icon is-left">
                  <i class="material-icons-outlined">
                    calendar_today
                  </i>
                </span>
              </div>
            </div>
          </li>
          <li class="column is-one-third">
            <div class="field">
              <label class="label">Trạng thái</label>
              <div class="control">
                <div class="select is-fullwidth @status.color.Replace("has-text", "is")">
                  <select @bind="current.status">
                    @foreach (var sl in DbOkrTask.Status())
                    {
                      <option value="@sl.id">@sl.name</option>
                    }
                  </select>
                </div>
              </div>
            </div>
          </li>
          <li class="column is-full">
            <div class="field">
              <label class="label">Link kế hoạch</label>
              <div class="control">
                <input @bind="current.link" type="url" class="input" placeholder="Nhập link kế hoạch" />
              </div>
            </div>
          </li>
          <li class="column is-full">
            <div class="field">
              <label class="label">Kết quả hành động</label>
              <div class="control">
                <textarea @bind="current.result" class="textarea" rows="3" placeholder="Mô tả kết quả hành động" />
              </div>
            </div>
          </li>
        </ul>
        <div class="field is-grouped mt-5">
          <div class="control is-expanded has-text-danger">
            @message
          </div>
          <div class="control">
            <div class="buttons is-right">
              <a class="button" @onclick="() => current = null">
                Hủy
              </a>
              <a class="button is-danger" @onclick="Delete">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">
                    cancel
                  </span>
                </span>
                <span>Xóa</span>
              </a>
              <a class="button is-link" @onclick="Update">
                <span class="icon">
                  <span class="material-icons-outlined is-size-6">
                    done
                  </span>
                </span>
                <span>Cập nhật</span>
              </a>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
}

@code {
  [CascadingParameter]
  public LayoutMain Layout { get; set; }
  [Parameter]
  public OkrModel Okr { get; set; }
  [Parameter]
  public OkrModel.KeyResult Kr { get; set; }

  private List<OkrTaskModel> dataList = new();
  private OkrTaskModel current = null;
  DateTimeOffset? StartDate { get; set; }
  DateTimeOffset? EndDate { get; set; }
  private string message = string.Empty;

  protected override async Task OnParametersSetAsync()
  {
    if(Okr != null)
    {
      dataList = await DbOkrTask.GetList(Layout.Company.id, Layout.CycleId, Okr.id, Kr.id);
    }
  }

  private void EditItem(OkrTaskModel item)
  {
    current = item;
    StartDate = new DateTime(current.start);
    EndDate = new DateTime(current.end);
  }

  private async Task<bool> Update()
  {
    bool _success = true;
    try
    {
      message = string.Empty;

      if (string.IsNullOrEmpty(current.name) || StartDate == null || EndDate == null)
      {
        message = "Nhập các trường bắt buộc (*)";

        await Task.Delay(5000);
        message = string.Empty;
      }
      else
      {
        current.start = StartDate.Value.DateTime.Ticks;
        current.end = EndDate.Value.DateTime.Ticks;
        await DbOkrTask.Update(Layout.Company.id, current);

        current = null;
        dataList = await DbOkrTask.GetList(Layout.Company.id, Layout.CycleId, Okr.id, Kr.id);
      }
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "Update()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }

  private async Task<bool> Delete()
  {
    bool _success = true;
    try
    {
      if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa: {current.name}"))
        return false;

      if (await DbOkrTask.Delete(Layout.Company.id, current.id))
      {
        dataList.Remove(current);
        current = null;
      }
      else
      {
        message = "Không thể xóa mục này, vui lòng thử lại !";
      }
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      StorageService.CatchLog(formatLink, "Delete()", ex.ToString(), Layout.User.id, Layout.Company.name);
      await Layout.Tagline();
      _success = false;
    }
    return _success;
  }
}